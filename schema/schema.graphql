type Query {
  hello(name: String): String!
  getTodos: [Todo]!
  getTodoById(id: Int): Todo!
  getUsers: [User]!
  getUserById(id: Int): User!
}

type Mutation {
  addTodo(addTodoInput: AddTodoInput!): Todo!
  updateTodo(id: Int!, updateTodoInput: UpdateTodoInput!): Todo!
  deleteTodo(id: Int!): Todo!
}

type Subscription {
  todoAddition: Todo!
  todoUpdate: Todo!
  todoDeletion: Todo!
}


type Todo {
  id: Int!
  name: String!
  content: String!
  status: TodoStatusEnum!
  user: User!
}

enum TodoStatusEnum {
  WAITING
  DOING
  DONE
  CANCELLED
}

type User {
  id: Int!
  name: String!
  email: String!
  todos: [Todo]
}

input AddTodoInput {
  name: String!
  content: String!
  user: Int!
}

input UpdateTodoInput {
  name: String
  content: String
  status: TodoStatusEnum
  user: Int
}
